---
- name: Set up system as desktop host
  hosts: fedora-desktop-hosts
  gather_facts: yes
  vars:
    myhostame: fedora.local
    reboot: no
  #vars_files:
  #  - /root/vars.yml
  #
  # TODO:
  # - add /data BTRFS mount point for sharing data with VMs
  # - download https://download.fedoraproject.org/pub/fedora/linux/releases/35/Spins/x86_64/iso/Fedora-KDE-Live-x86_64-35-1.2.iso to boot
  # - download CentOS 8 Stream
  tasks:
    - name: Make sure that an empty requirements.yml file exists
      delegate_to: 127.0.0.1
      file:
        path: requirements.yml
        state: touch

    - name: Create requirements.yml
      delegate_to: 127.0.0.1
      blockinfile:
        path: requirements.yml
        create: yes
        block: |
          ---
          # Install a role from the Ansible Galaxy
          #- src: joschro.rpmfusion
          #- src: joschro.rpmfusion-tainted
          #- src: joschro.libvirtd
          #- src: joschro.cockpit
          - src: linux-system-roles.cockpit
          - src: linux-system-roles.firewall
          - src: linux-system-roles.certificate
            # https://github.com/debops-contrib/ansible-btrfs/blob/master/tasks/main.yml

          # Install a role from GitHub
          - src: https://github.com/joschro/ansible-role-rpmfusion
            name: joschro.rpmfusion
              #- src: https://github.com/joschro/ansible-role-rpmfusion-tainted
              #  name: joschro.rpmfusion-tainted
          - src: https://github.com/joschro/ansible-role-libvirtd
            name: joschro.libvirtd
          - src: https://github.com/joschro/ansible-role-cockpit
            name: joschro.cockpit
          # Install a collection from Ansible galaxy
          #collections:
          #  - name: community.libvirt

    - name: Install required packages
      become: yes
      package:
        name:
          - "*-firmware"
          - ansible
          - git
          - tuned
          - vim-default-editor
          - vim-enhanced
        state: present
        # maybe need to remove "nano-default-editor" first?

    - name: Source required roles
      local_action: command ansible-galaxy install -r requirements.yml
      # (add parameter --force to update role on succeeding runs of playbook)

    - name: Execute rpmfusion role
      include_role:
        name: joschro.rpmfusion

    - name: Execute libvirtd role
      include_role:
        name: joschro.libvirtd

#    - name: Execute cockpit role
#      include_role:
#        name: joschro.cockpit

    - name: Install RHEL/Fedora Web Console (Cockpit)
      include_role:
        name: linux-system-roles.cockpit
        apply:
          become: yes
      vars:
        #cockpit_packages: default
        #cockpit_packages: minimal
        cockpit_packages: full

    - name: Configure Firewall for Web Console
      include_role:
        name: linux-system-roles.firewall
        apply:
          become: yes
      vars:
        firewall:
          service: cockpit
          state: enabled

    - name: Generate Cockpit web server certificate
      include_role:
        name: linux-system-roles.certificate
        apply:
          become: yes
      vars:
        certificate_requests:
          - name: /etc/cockpit/ws-certs.d/monger-cockpit
            dns: ['localhost', 't14s-jschrode.local']
              #ca: ipa
            ca: self-sign
            ip:
              - 192.168.178.21
            group: cockpit-ws

    - name: Create /data directories and set access rights
      become: yes
      file:
        path: "{{ item }}"
        state: directory
        mode: "a+rwXt"
      with_list:
        - /data/encrypted
        - /data/encrypted/shared
        - /data/encrypted/software
        - /data/encrypted/software/images
        - /data/uncrypted
        - /data/uncrypted/libvirt-system
        - /data/uncrypted/libvirt-system/images
        - /data/uncrypted/libvirt-users

    - name: Link /var/lib/libirt/images to /data/uncrypted/libvirt-system/images
      become: yes
      file:
        src: /data/uncrypted/libvirt-system/images
        dest: /var/lib/libirt/images
        state: link

    - name: Create /data/uncrypted/libvirt-users/<user>/images
      file:
        path: '/data/uncrypted/libvirt-users/{{ ansible_user }}/images'
        state: directory

    - name: Link user's ~/.local/share/libvirt/images to /data/uncrypted/libvirt-users/<user>/images
      file:
        src: '/data/uncrypted/libvirt-users/{{ ansible_user }}/images'
        dest: ~/.local/share/libvirt/images
        state: link

    - name: Update packages
      become: yes
      package:
        name: '*'
        state: latest

    - name: Reboot to apply changes
      become: yes
      reboot:
      when: reboot == "yes"
      register: reboot_results

    - name: Show reboot results
      debug:
        msg:
          - "Reboot successful: {{ reboot_results.rebooted }}"
          - "Reboot time: {{ reboot_results.elapsed }}"
      when: reboot == "yes"

        #    - name: Enable SSH service
        #      become: yes
        #      service:
        #        name: sshd
        #        state: started
        #        enabled: yes
